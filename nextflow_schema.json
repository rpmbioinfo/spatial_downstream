{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com//master/nextflow_schema.json",
  "title": " pipeline parameters",
  "description": "",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["input", "outdir"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_input.json",
          "mimetype": "text/csv",
          "pattern": "",
          "description": "Path to count files from a cellranger alignment",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open"
        },
        "matrix": {
          "type": "string",
          "default": "filtered",
          "description": "Select which counts (filtered or raw) to select from"
        }
      }
    },
    "project_description": {
      "title": "Project Description",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "description": {
          "type": "string",
          "default": "Generic description",
          "hidden": true,
          "description": "Project description text"
        },
        "data": {
          "type": "string",
          "default": "Generic data description",
          "hidden": true,
          "description": "Project data description text"
        },
        "objectives": {
          "type": "string",
          "default": "Generic objectives",
          "hidden": true,
          "description": "Project objectives text"
        },
        "metadata": {
          "type": "string",
          "description": "Sample metadata",
          "pattern": "^\\S+\\.(xlsx|xls|csv|tsv)$"
        },
        "quarto_index": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/project_assets/index.qmd",
          "description": "Quarto index file"
        },
        "logo": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/project_assets/logo.jpeg",
          "hidden": true,
          "description": "Quarto report logo"
        },
        "quarto_yml": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/project_assets/_quarto_full.yml",
          "hidden": true,
          "description": "Quarto YAML file"
        },
        "outcomes": {
          "type": "string",
          "default": "['Group']",
          "description": "Selected outcomes for differential expression"
        },
        "sample_exclusion": {
          "type": "string",
          "description": "Samples to exclude from analysis",
          "default": "['ASY14']"
        }
      }
    },
    "workflow_control": {
      "title": "Workflow Control",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "stop_after": {
          "type": "string",
          "description": "Interupt workflow after specified step",
          "enum": ["QC", "DR", "INT", "CLUST"]
        }
      }
    },
    "analysis_details": {
      "title": "Analysis details",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "pipeline": {
          "type": "string",
          "default": "rna",
          "description": "Analysis pipeline. Change based on dataset",
          "enum": [
            "multiome",
            "rna",
            "atac",
            "cite",
            "teaseq",
            "crispr",
            "cite_crispr"
          ]
        },
        "process_gex": {
          "type": "boolean",
          "default": true,
          "hidden": true
        },
        "integrate_modalities": {
          "type": "boolean",
          "description": "Weighted Nearest Neighbor Integration"
        }
      }
    },
    "species_details": {
      "title": "Species details",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "genome": {
          "type": "string",
          "default": "GRCh38",
          "description": "Selected genome"
        },
        "mito_regex": {
          "type": "string",
          "description": "REGEX pattern for mitochondrial genes for  this species"
        },
        "ribo_regex": {
          "type": "string",
          "description": "REGEX pattern for ribosomal genes for  this species number of counts per cell"
        }
      }
    },
    "dataset_integration": {
      "title": "Dataset integration",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "view_batch": {
          "type": "string",
          "default": "Project",
          "description": "Metadata variable to visualize"
        },
        "integrate_datasets": {
          "type": "boolean",
          "default": true,
          "description": "Batch correct by variable defined"
        },
        "integrate_by": {
          "type": "string",
          "default": "Project"
        },
        "integration_method": {
          "type": "string",
          "default": "Harmony",
          "enum": ["CCA", "RPCA", "Harmony", "FastMNN"],
          "description": "Integration method"
        }
      }
    },
    "cell_annotation": {
      "title": "Cell Annotation",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "selected_method": {
          "type": "string",
          "default": "azimuth"
        },
        "markers_rna": {
          "type": "string",
          "default": "['FOXP3', 'CD3E', 'CD8A', 'CD4', 'CD19', 'MS4A1', 'CD14', 'FCGR3A', 'NCAM1', 'HLA-DRB1', 'PRF1', 'GZMB']",
          "hidden": true
        },
        "markers_adt": {
          "type": "string",
          "default": "['CD3E', 'CD4', 'CD8', 'CD14', 'CD16', 'CD56', 'CD1C', 'CD19']",
          "hidden": true
        }
      }
    },
    "script_collection": {
      "title": "Script Collection",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "scripts": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin"
        },
        "create_seurat": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/create_seurat.Rmd",
          "hidden": true
        },
        "qc_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/QC.qmd",
          "hidden": true
        },
        "dimreduc_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/dimension_reduction.qmd",
          "hidden": true
        },
        "int_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/integrate_datasets.qmd",
          "hidden": true
        },
        "int_multimod_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/integrate_modalities.qmd",
          "hidden": true
        },
        "clustering_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/clustering.qmd",
          "hidden": true
        },
        "annotation_script": {
          "type": "string",
          "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/spatial_deconvolution.qmd",
          "hidden": true
        }
      }
    },
    "gex_qc_metrics": {
      "title": "GEX QC Metrics",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "nCount_Spatial_min": {
          "type": "integer",
          "default": 100
        },
        "nCount_Spatial_max": {
          "type": "integer",
          "default": 25000
        },
        "nFeature_Spatial_min": {
          "type": "integer",
          "default": 100
        },
        "nFeature_Spatial_max": {
          "type": "integer",
          "default": 2500
        }
      }
    },
    "dimension_reduction_clustering": {
      "title": "Dimension Reduction / clustering",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "umap_ndims": {
          "type": "integer",
          "default": 30
        },
        "clustering_res": {
          "type": "number",
          "default": 0.8
        }
      }
    },
    "deconvolution": {
      "title": "Deconvolution",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "deconvolution_method": {
          "type": "string",
          "default": "RCTD"
        },
        "rctd_ref": {
          "type": "string",
          "default": "none"
        },
        "ref_ident": {
          "type": "string",
          "default": "cell_type"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/project_description"
    },
    {
      "$ref": "#/definitions/workflow_control"
    },
    {
      "$ref": "#/definitions/analysis_details"
    },
    {
      "$ref": "#/definitions/species_details"
    },
    {
      "$ref": "#/definitions/gex_qc_metrics"
    },
    {
      "$ref": "#/definitions/dimension_reduction_clustering"
    },
    {
      "$ref": "#/definitions/dataset_integration"
    },
    {
      "$ref": "#/definitions/cell_annotation"
    },
    {
      "$ref": "#/definitions/script_collection"
    },
    {
      "$ref": "#/definitions/deconvolution"
    }
  ],
  "properties": {
    "help": {
      "type": "string"
    },
    "spat_var_script": {
      "type": "string",
      "default": "/home/adampelletier/Documents/AWS_pipelines/nextflow/spatial_downstream/bin/spat_var_feats.qmd"
    }
  }
}
